---
author: Jieun Park
---

| `r`-function                 | Description                                                                                                                                                                           |
|:-------------------|----------------------------------------------------|
| `data('dataset_name')`       | Load a R built-in dataset named by 'dataset_name'                                                                                                                                     |
| `names(x)`                   | Retrieve or set the names of elements in `x`                                                                                                                                          |
| `attach(df)`                 | Add a data frame `df` to the search path, which allows you to access the variables within the data frame `df` directly by their names instead of using a normal way such as `df$var`. |
| `cor(x,y)`                   | Find the correlation of two vectors `x` and `y`                                                                                                                                       |
| `qplot(x,y,data)`            | Create a quick plot data `(x,y)` in the dataframe `data`                                                                                                                              |
| `geom_text(aes(x,y, label))` | Add a `label` at the coordinate `(x,y)` in the current plot.                                                                                                                          |
| `lm(y~x, data)`              | Perform the linear regression of `y~x`, where `y`,`x` are column names in the dataframe `data`.                                                                                       |
| `summary(lm_model)`          | Summarize the linear model `lm_model` obtained by the R-function `lm`.                                                                                                                |

# CORRELATION AND REGRESSION

## Correlation

We check if a linear correlation exists between two variables using `cor()` function.

```{r}
# We can calculate the correlation coefficient between x and y with the 
# following code.
# cor(x, y)
```

```{r warning=FALSE, message=FALSE}
library(tidyverse)
library(patchwork)
data("mtcars")
names(mtcars)
```

```{r, message = FALSE, warning=FALSE}
attach(mtcars)
# positive correlation
qplot(wt, disp, data = mtcars) +
  geom_text(aes(x=2, y=400, label="r = 0.888"))
cor(wt, disp)
# negative correlation
qplot(mpg, wt, data = mtcars)  +
  geom_text(aes(x=30, y=5, label="r = - 0.868"))
cor(mpg, wt)
# no correlation
qplot(drat, qsec, data = mtcars)  +
  geom_text(aes(x=4.5, y=22, label="r = 0.091"))
cor(drat, qsec)
```

-   `wt` and `disp` have a positive correlation with r =`r round(cor(wt, disp), 3)`.
-   `wt` and `disp` have a negative correlation with r = `r round(cor(mpg, wt), 3)`.
-   `wt` and `disp` does not have a significant correlation with r = `r round(cor(wt, qsec), 3)`.

## Linear regression

Assume we have a data set `data` with `x` and `y` variables and we model their relationship by linear regression. We can find the slope and the intercept of the estimated regression line using the following code.

```{r}
# res <- lm(y ~ x, data)
# summary(res)
```

For example, we can find the regression line equation between `disp` ($x$-variable, predictor) and `wt` ($y$-variable, response) as below.

```{r}
data("mtcars")
res <- lm(wt ~ disp, mtcars)
summary(res)
```

The estimated regression line is `wt = 1.600 + 0.007 disp` since the intercept is `r round(summary(res)$coef[1],3)` and the slope is `r round(summary(res)$coef[2],3)`. Both of them are significantly different from 0 with a significance level $\alpha = 0.05$  because their $p$-values are almost `0`. The linear relation means that one inch increase in `disp` (displacement) makes 7 lbs increase in `wt` (weight). On average, if a car has a one-inch longer displacement, it is 7 pounds heavier.

If a car has 200 inches displacement, then its estimated weight can be calculated as $$ 1.600 + 0.007\cdot200 = 3000 \textrm{ lbs} $$

We next use the `R` package `ggplot` to visualize the data set and the regression line.

```{r, echo =TRUE, message=FALSE}
ggplot(mtcars, aes(x=disp, y=wt)) +  # define x and y
  geom_point()+                      # scatter  plot
  geom_smooth(method=lm, se=FALSE) + # add a regression line
  geom_text(aes(x = 150, y = 4.5, label = "wt = 1.600 + 0.007disp")) #add a label

```
